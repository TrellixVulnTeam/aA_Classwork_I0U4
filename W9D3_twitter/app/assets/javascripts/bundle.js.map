{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA,aAAa,mBAAO,CAAC,qCAAW;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;;;;;;;;;;;AC3CA;AACA,uBAAuB;AACvB;AACA;AACA,qBAAqB,IAAI,uCAAuC,UAAU,SAAS;AACnF;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA,qBAAqB,IAAI;AACzB;AACA;AACA,KAAK;AACL;AACA;;AAEA;;;;;;UCnBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA;AACA;AACA,qBAAqB,mBAAO,CAAC,uDAAoB;;AAEjD;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC,iD","sources":["./frontend/follow_toggle.js","./frontend/util.js","webpack/bootstrap","./frontend/twitter.js"],"sourcesContent":["const Util = require('./util.js')\n\nclass FollowToggle {\n    constructor($el) {\n        this.$el = $el //jquery wrapped element\n        this.userId = $el.data('user-id')\n        this.followState = $el.data('initial-follow-state')\n        // debugger\n        // console.log(this)\n        //on click\n        this.render()\n        this.handleClick()\n    }\n\n    //render - set text of button\n\n    render() {\n      let state = '';\n\n      if (this.followState === 'followed') {\n        state = 'Unfollow!';\n      } else {\n        state = 'Follow!';\n      }\n      this.$el.html(state)\n    }\n\n    handleClick() {\n      this.$el.on('click', (e) => {\n        e.preventDefault();\n\n        if (this.followState === 'unfollowed') {\n          Util.followUser(this.userId)\n          .then(this.followState = 'followed')\n          .then(this.render())\n        } else {\n          Util.unfollowUser(this.userId)\n          .then(this.followState = 'unfollowed')\n          .then(this.render())\n        }\n      })\n    }\n}\n\nmodule.exports = FollowToggle;","\nconst APIUtil = {\n  followUser: arg => { //expect userArg to have keys of username and followee arg\n    console.log(arg)\n    return $.ajax({\n      url: `/users/${arg}/follow`, //Matching our rails routes; `/users/${userArgs}/follow\n      method: \"POST\",\n      dataType: 'JSON'\n    })\n  },\n  unfollowUser: arg => {\n    return $.ajax({\n      url: `/users/${arg}/follow`, //Matching our custom rails route\n      method: 'DELETE',\n      dataType: 'JSON'\n    })\n  }\n};\n\nmodule.exports = APIUtil;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","//entry point\n//import\nconst FollowToggle = require('./follow_toggle.js');\n\n// document.addEventListener('DOMContentLoaded', (event) => {\n//     //constructor?\n// });\n\n// what is a doc ready cb\n// $ says we want to enter jquery library\n// const = () => {\n//     //jquery search for button follow toggle\n//     $('button.follow-toggle').on('click', e => {\n//         e.preventDefault();\n//         //constructor - call helper to switch follow status\n//     })\n// }\n\n//define helper\n//uses util\n\n$(function(){\n    //grab all follow toggle      //callback\n    const buttons = $('button.follow-toggle');\n    buttons.each((index) => {\n        new FollowToggle(buttons.eq(index));\n    })\n})//jquery instructed to run this after doc loaded"],"names":[],"sourceRoot":""}